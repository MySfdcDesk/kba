public class FinancialDataHandler {
    //These variables store the the trigger lists and trigger maps
    //Author: Michael Haase
    List<Financial_Data__c> newFdList = new List<Financial_Data__c>();
    List<Financial_Data__c> oldFdList = new List<Financial_Data__c>();
    Map<Id,Financial_Data__c> newFdMap = new map<Id,Financial_Data__c>();
    Map<Id,Financial_Data__c> oldFdMap = new Map<Id,Financial_Data__c>();
    
    Set<Id> fdIds = new set<Id>();
    Set<Id> fdAcctIds = new set<Id>();
    List<Account> accts2Update = new List<Account>();
    
    
    //Constructor
    public FinancialDataHandler(List<Financial_Data__c> newTriggerList,
                                List<Financial_Data__c> oldTriggerList,
                                Map<Id,Financial_Data__c> newTriggerMap,
                                Map<Id,Financial_Data__c> oldTriggerMap) {
                                    newFdList = newTriggerList;
                                    oldFdList = oldTriggerList;
                                    newFdmap = newTriggerMap;
                                    oldFdMap = oldTriggerMap;
                                }
    
    
    
    //Method on Insert OR on Update**********************************************
    public void copyDataOnInsertOrUpdate() {
        // Here we are working with data from Trigger.new
        for(Financial_data__c f : newFdList) {
            fdAcctIds.add(f.Account__c);
        }
        
        Map<Id,Account> acctMap = new Map<Id,Account>();
        //Get all Accounts with related Financial Data records
        //By Sorting Financial Data records by Year Ascending and Limiting it to 1
        //We make sure we  
        List<Account> aList = [Select id,Name,
                               Year_Sheetfed_Service_Financial_Data__c,
                               Annual_Revenue_Agency_Parts__c,
                               Annual_Revenue_Agency_Press_Consum_sf__c,
                               Annual_Revenue_Agency_Service__c,
                               Nbr_Fin_Data_Sheetfed_Service__c,
                               Segmentation_sf__c,
                               (Select Id,
                                Annual_Revenue_Agency_Parts__c,
                                Annual_Revenue_Agency_Press_Consum__c,
                                Annual_Revenue_Agency_Service__c,
                                Segmentation__c,
                                Year__c 
                                From Financial_Data__r
                                Where Business_Area__c = 'Sheetfed - Service' AND RecordType.DeveloperName = 'Business_Unit_Data'
                                Order By Year__c ASC
                                Limit 1)
                               From Account
                               Where Nbr_Fin_Data_Sheetfed_Service__c != null AND  Id IN :fdAcctIds];
        
        for(Account a : aList) {
            acctMap.put(a.Id,a);
        }
        
        List<Account> newAcctList = new List<Account>();
        
        for(Account ac : aList) {
            Account na = acctMap.get(ac.Id);
            if(na.Nbr_Fin_Data_Sheetfed_Service__c != null) {
                for(Financial_Data__c fd : na.Financial_Data__r) {
                    Account a = new Account();
                    a.Id = na.Id;
                    a.Year_Sheetfed_Service_Financial_Data__c = fd.Year__c;
                    a.Annual_Revenue_Agency_Parts__c = fd.Annual_Revenue_Agency_Parts__c;
                    a.Annual_Revenue_Agency_Press_Consum_sf__c = fd.Annual_Revenue_Agency_Press_Consum__c;
                    a.Annual_Revenue_Agency_Service__c = fd.Annual_Revenue_Agency_Service__c;
                    a.Segmentation_sf__c = fd.Segmentation__c;
                    newAcctList.add(a);
                }
            }   
        }
        update newAcctList;        
    }
    
    
    //Method on Delete********************************************
    public void copyDataOnDelete() {
        
        for(Financial_data__c f : oldFdList) {
            fdAcctIds.add(f.Account__c);
        }
        
        
        Map<Id,Account> acctMap = new Map<Id,Account>();
        
        List<Account> aList = [Select id,Name,
                               Year_Sheetfed_Service_Financial_Data__c,
                               Annual_Revenue_Agency_Parts__c,
                               Annual_Revenue_Agency_Press_Consum_sf__c,
                               Annual_Revenue_Agency_Service__c,
                               Nbr_Fin_Data_Sheetfed_Service__c,
                               (Select Id,
                                Annual_Revenue_Agency_Parts__c,
                                Annual_Revenue_Agency_Press_Consum__c,
                                Annual_Revenue_Agency_Service__c,
                                Segmentation__c,
                                Year__c 
                                From Financial_Data__r
                                Where Business_Area__c = 'Sheetfed - Service' AND RecordType.DeveloperName = 'Business_Unit_Data'
                                Order By Year__c ASC
                                Limit 1)
                               From Account
                               Where Nbr_Fin_Data_Sheetfed_Service__c != null AND  Id IN :fdAcctIds];
        
        
        for(Account a : aList) {
            acctMap.put(a.Id,a);
        }
        
        List<Account> newAcctList = new List<Account>();
        
        for(Account ac : aList) {
            Account na = acctMap.get(ac.Id);
            if(na != null && na.Nbr_Fin_Data_Sheetfed_Service__c == 1) {
                Account a = new Account();
                a.Id = na.Id;
                a.Year_Sheetfed_Service_Financial_Data__c = '';
                a.Annual_Revenue_Agency_Parts__c = 0;
                a.Annual_Revenue_Agency_Press_Consum_sf__c = 0;
                a.Annual_Revenue_Agency_Service__c = 0;
                a.Segmentation_sf__c = '';
                newAcctList.add(a);
            } 
            else if(na != null && na.Nbr_Fin_Data_Sheetfed_Service__c > 1) {   
                for(Financial_Data__c fd : na.Financial_Data__r) {
                    Account a = new Account();
                    a.Id = na.Id;
                    a.Year_Sheetfed_Service_Financial_Data__c = fd.Year__c;
                    a.Annual_Revenue_Agency_Parts__c = fd.Annual_Revenue_Agency_Parts__c;
                    a.Annual_Revenue_Agency_Press_Consum_sf__c = fd.Annual_Revenue_Agency_Press_Consum__c;
                    a.Annual_Revenue_Agency_Service__c = fd.Annual_Revenue_Agency_Service__c;
                    a.Segmentation_sf__c = fd.Segmentation__c;
                    newAcctList.add(a);
                }
            }   
        } 
        update newAcctList;        
    }
}
